  #set($articleBlogMoreLinkParams = "$!articleBlogMoreLinkParams")
  #set($bentrydoc = $xwiki.getDocument($article.getDocumentReference()))
  #if("$!bentrydoc" != '')
    #set($creationDate = '')
    #set($creationDateStr = '')
    #set($creationDate = $article.getPublishDate())
    #if("$!creationDate" != '')
      #set($blog_dateFormat = $msg.get('cel_blog_dateformat'))
      #if("$!blog_dateFormat" == '')
      #set($blog_dateFormat = "long_date")
      #end
      #set($creationDateStr = $datetool.format($blog_dateFormat, $creationDate, $services.celementsweb.getLocal($language)))
    #end
    #set($additionalArticleClass = '')
    #if(("$!creationDate" != '') && $xwiki.getCurrentDate().before($!creationDate))
      #set($additionalArticleClass = " future")
    #end
    <div class="cel_cm_blog_article article_abstract$!{additionalArticleClass}" id="Art${blogDoc.getFullName()}:${bentrydoc.getFullName()}">
    #if($showArticleBlogName)
      <div class="article_blogPageName">
      #set($articleBlogDoc = '')
      #set($articleBlogDoc = $xwiki.getDocument($!article.getDocumentReference()))
      #set($blogspaceName = "$!articleBlogDoc.getSpace()")
      #set($blogDocument = $xwiki.celementsblog.getBlogPageByBlogSpace($blogspaceName))
      #set($blogPageName = '')
      #set($blogPageName = $blogDocument.getTitle())
      #if(("$!blogPageName" == ''))
        #set($blogPageName = $articleBlogDoc.name)
      #end
      $blogPageName
      </div>
    #end
    #if($cdate!=$creationDate)
      <div class="article_date">
        $creationDateStr
      </div>
      #set ($cdate = $creationDate)
    #end
    #set($fullTextLink = "$xwiki.getURL($article.getDocName(),'view', $articleBlogMoreLinkParams)")
    <div class="article_title $!{article.getTitleLang($language)} h1">
    #if(("$!viewtype" == 'extract') || ("$!viewtype" == 'title'))<a class='article_link' href="$fullTextLink">#end
    $article.getTitle($language)
    #if(("$!viewtype" == 'extract') || ("$!viewtype" == 'title'))</a>#end</div>
    #if("$!viewtype" != 'title')
      #set($viewtypefull = ("$!viewtype" == 'full'))
      <div class="text $!{article.getExtractLang($language, $viewtypefull)}">
      #set($content = $article.getExtract("$language", $viewtypefull))
      #if($article.hasMoreLink("$language", $viewtypefull))
        #if($article.hasMoreLinkDots("$language", $viewtypefull))
          #set($content = "$content ...")
        #end
        <!-- moreLink: $language , $msg.get('cel_rls_blog_article_more') -->
        #set($content = "$content <a class='article_link' href='$xwiki.getURL($article.getDocName(),'view', $articleBlogMoreLinkParams)'>$msg.get('cel_rls_blog_article_more')</a>")
      #end
      $xwiki.renderText($content, $bentrydoc)
      #if($has_comments)
        #if($viewtypefull)
#set($inline = true)
#set($articleDoc = $xwiki.getDocument($article.getDocumentReference()))
#parse('celMacros/getInlineBlogComments.vm')
        #else
        <div class="comment">
        <a class='article_link' href="$fullTextLink">
        #set($comment_obj = $!bentrydoc.getObjects('XWiki.XWikiComments'))
        #set($commentCount = 0)
        #if("$!comment_obj" != '')
          #foreach($comment in $comment_obj)
            #set($commentCount = $commentCount + 1)
          #end
        #end
        #if($commentCount == 1)
          $commentCount $adminMsg.get('cel_tm_comment')
        #else
          $commentCount $adminMsg.get('cel_tm_comments')
        #end
        </a>
        </div> ## comment
        #end ## no full view
      #end
      </div> <!-- article_content -->
    #end ## if("$!viewtype" != 'title')
    <div class="clearleft"><!-- required:floating images --></div>
    #if(($article.getDocName().indexOf("$!{spacename}.") != 0) && $article.isSubscribable() && $article.isFromSubscribableBlog("$blogDoc.getFullName()"))
      #set($blogSaveArticle = $bentrydoc)
      #set($blogSaveSpace = "$doc.fullName")
#parse('celMacros/blogArticleSubscribeBar.vm')
    #end
    </div> <!-- article_abstract -->
  #set($attributes = $xwiki.getHashMap())
  ##TODO type=article waere eigentlich besser geeignet, hat aber einige Felder mehr zur Verfuegung.
  ##     Es ist aber fraglich ob sich das Erfassen der zusaetzlichen Felder lohnt und wie Facebook
  ##     und Twitter articles darstellen - also ob die zusaetzlichen Felder ueberhaupt verwenden.
  #set($devNull = $attributes.put('name', 'og:type'))
  #set($devNull = $attributes.put('property', 'og:type'))
  $services.celementsweb.addMetaTag($attributes, 'website')
  #set($attributes = $xwiki.getHashMap())
  #set($devNull = $attributes.put('name', 'og:image'))
  #set($devNull = $attributes.put('property', 'og:image'))
  #foreach($imgUrl in $article.getArticleImagesBySizeAsc($language))
    $services.celementsweb.addMetaTag($attributes, $imgUrl)
  #end
  #set($attributes = $xwiki.getHashMap())
  #set($devNull = $attributes.put('name', 'og:url'))
  #set($devNull = $attributes.put('property', 'og:url'))
  $services.celementsweb.addMetaTag($attributes, $article.getExternalUrl())
  #set($attributes = $xwiki.getHashMap())
  #set($devNull = $attributes.put('name', 'og:title'))
  #set($devNull = $attributes.put('property', 'og:title'))
  $services.celementsweb.addMetaTag($attributes, $displayTitle)
  #set($attributes = $xwiki.getHashMap())
  #set($devNull = $attributes.put('name', 'og:description'))
  #set($devNull = $attributes.put('property', 'og:description'))
  #set($maxNumChars = 300) ## For Facebook posts 300, for Facebook comments 110
  $services.celementsweb.addMetaTag($attributes, $article.getExtractPlainText($language, $viewtypefull, $maxNumChars))
  $services.celementsweb.displayAllMetaTags()
#else
  <!-- not enough rights on $services.model.serialize($article.getDocumentReference()) -->
#end
